fruitStory.service('Types', function () {
    var types = {
        design:{
            type:'design',
            title:"Затея",
            text: "Затея — план создания объектов или организации событий"
        },
        stage:{
            type:'stage',
            title:'Проект'
        },
        object:{
            type:'object',
            title:'Объект'
        },
        event:{
            type:'event',
            title:"Событие",
            text: "Событие — ограниченная по времени совместная деятельность или информация о ней, подтвержденная участниками."
        },
        author: {
          type:'author',
          title:"Автор",
          text: "Автор — первый опубликовавший затею или проект."
        },
        thing:{
            type:'thing',
            title:"Штука",
            text: "Штука — материальная сушность"
        },
        persona:{
            type:'persona',
            title:'Личность'
        },
        face:{
            type:'face',
            title:'Лицо'
        },
        designFace:{
            type:'designFace',
            title:'Лицо затеи'
        },
        donation:{
            type:'donation',
            title:'Дар'
        },
        skill:{
            type:'skill',
            title:'Навык'
        },
        task:{
            type:'task',
            title:'Задача'
        },
        demand:{
            type:'demand',
            title:'Поставка'
        },
        idea:{
            type:'idea',
            title:'Идея'
        },
        intent:{
            type:'intent',
            title:'Цель'
        },
        gist:{
            type:'gist',
            title:'Суть'
        },
        place:{
            type:'place',
            title:'Место'
        },
        time:{
            type:'time',
            title:'Время'
        },
        chance:{
            type:'chance',
            title:'Возможность'
        },
        tool:{
            type:'tool',
            title:'Инструмент'
        },
        material:{
            type:'material',
            title:'Материал'
        },
        result:{
            type:'result',
            title:'Результат'
        },
        present:{
            type:'present',
            title:'Подарок'
        },
        question:{
            type:'question',
            title:'Вопрос'
        },
        statement:{
            type:'statement',
            title:'Утверждение'
        },
        quality:{
            type:'quality',
            title:'Качество'
        },
        quantity:{
            type:'quantity',
            title:'Количество'
        }
    };
    types.publicFeed={
        canHave: [
            types.design
        ]
    };
    types.personal={
        canHave: [
            types.persona,
            types.face,
            types.designFace
        ]
    };
    types.persona.canHave=[

        types.donation,
        types.place,
        types.question,
        types.time,
        types.statement
    ];
    types.designFace.canHave=[

        types.donation,
        types.present,
        types.skill,
        types.place,
        types.time,
        types.result,
        types.tool,
        types.material,
        types.question,
        types.statement
    ];
    types.face.canHave=[

        types.donation,
        types.skill,
        types.result,
        types.place,
        types.time,
        types.tool,
        types.material,
        types.question,
        types.statement
    ];
    types.statement.canHave=[
        types.question,
        types.statement
    ];
    types.material.canHave=[
        types.place,
        types.quality,
        types.quantity,
        types.question,
        types.statement
    ];
    types.chance.canHave=[
        types.time,
        types.place,
        types.quality,
        types.quantity,
        types.question,
        types.result,
        types.statement
    ];
    types.skill.canHave=[
        types.tool,
        types.material,
        types.question,
        types.statement
    ];
    types.result.canHave=[
        types.place,
        types.quality,
        types.quantity,
        types.question,
        types.statement
    ];
    types.tool.canHave=[
        types.skill,
        types.place,
        types.quality,
        types.quantity,
        types.question,
        types.statement
    ];
    types.time.canHave=[
        types.statement,
        types.question
    ];
    types.place.canHave=[
        types.statement,
        types.question

    ];
    types.task.canHave = [
        types.skill,
        types.tool,
        types.material,
        types.place,
        types.time,
        types.question,
        types.statement,
        types.result,
        types.face
    ];
    types.demand.canHave = [
        types.tool,
        types.material,
        types.place,
        types.time,
        types.question,
        types.statement,
        types.result,
        types.face
    ];
    types.donation.canHave=[
        types.quality,
        types.quantity,
        types.question,
        types.statement
    ];
    types.present.canHave=[
        types.quality,
        types.quantity,
        types.question,
        types.result,
        types.statement
    ];
    types.idea.canHave=[
        types.statement,
        types.question
    ];
    types.intent.canHave=[
        types.statement,
        types.question
    ];
    types.gist.canHave=[
        types.statement,
        types.question
    ];
    types.design.canHave = [
        types.stage,
        types.event,
        types.object,
        types.idea,
        types.intent,
        types.gist,
        types.chance,
        types.donation,
        types.present,
        types.designFace,
        types.author
    ];
    types.stage.canHave = [
        types.object,
        types.event,
        types.idea,
        types.intent,
        types.gist,
        types.chance,
        types.donation,
        types.present,
        types.designFace
    ];
    types.object.canHave = [
        types.gist,
        types.place,
        types.time,
        types.tool,
        types.material,
        types.task,
        types.demand,
        types.result,
        types.chance,
        types.donation,
        types.present,
        types.designFace,
        types.idea,
        types.intent,
        types.author
    ];
    types.event.canHave = [
        types.gist,
        types.place,
        types.time,
        types.tool,
        types.material,
        types.task,
        types.demand,
        types.result,
        types.chance,
        types.donation,
        types.present,
        types.designFace,
        types.idea,
        types.intent,
        types.author
    ];
    types.statement.canHave = [
        types.statement,
        types.question
    ];
    types.author.canHave = [
        types.statement,
        types.question
    ];
    types.question.canHave = [
        types.statement
    ];
    this.types=types;
});
